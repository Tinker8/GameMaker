<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory

//Inventory array
for (i = 0; i &lt; 2; i++)
{
    invArray[i] = 0;
}

//IniVariables
selected_item = "sword";
globalvar showInventory;
showInv = true;
globalvar maxItems;
maxItems = 5;
temp = 0;

//Items
/*
0 = sword
1 = bow

*/


//Set every hotbar slot to empty
for (i = 0; i &lt; maxItems; i += 1)
{
    global.hotbar[i] = -1;
}

global.hotbar[0] = 0; //hotbar slot 1 now has a sword
global.hotbar[1] = 1; //hotbar slot 2 now has a bow

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inventory

x1 = view_xview[0];
y1 = view_yview[0];

//Create hotbar box's
for (i = 0; i &lt; maxItems; i += 1)
{
    
    if (global.hotbar[i] != -1)
    {
        draw_sprite(asset_get_index("sprite_" + global.itemArray[i,1]),0,x1+32+(64*i),y1+32)
        draw_sprite(sprite_ui_box,0,x1+32+(64*i),y1+32)
    }
    else
    {
        draw_sprite(sprite_ui_box,0,x1+32+(64*i),y1+32)
    }
}
//Draw item selection box
if (selected_item == "sword") temp = 0; //Need to find better way to to this, like match array index (obj_char code)
if (selected_item == "bow") temp = 1;

draw_sprite(sprite_ui_box,1,x1+32+(64*temp),y1+32)

instance_deactivate_region(view_xview-64, view_yview-64, view_wview+64, view_hview+64, 0, 1);
instance_activate_region(view_xview - 16, view_yview - 16, view_wview + 32, view_hview + 32, 1);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
